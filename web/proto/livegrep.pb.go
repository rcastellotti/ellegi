// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.4
// source: livegrep.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchStats_ExitReason int32

const (
	SearchStats_NONE        SearchStats_ExitReason = 0
	SearchStats_TIMEOUT     SearchStats_ExitReason = 1
	SearchStats_MATCH_LIMIT SearchStats_ExitReason = 2
)

// Enum value maps for SearchStats_ExitReason.
var (
	SearchStats_ExitReason_name = map[int32]string{
		0: "NONE",
		1: "TIMEOUT",
		2: "MATCH_LIMIT",
	}
	SearchStats_ExitReason_value = map[string]int32{
		"NONE":        0,
		"TIMEOUT":     1,
		"MATCH_LIMIT": 2,
	}
)

func (x SearchStats_ExitReason) Enum() *SearchStats_ExitReason {
	p := new(SearchStats_ExitReason)
	*p = x
	return p
}

func (x SearchStats_ExitReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchStats_ExitReason) Descriptor() protoreflect.EnumDescriptor {
	return file_livegrep_proto_enumTypes[0].Descriptor()
}

func (SearchStats_ExitReason) Type() protoreflect.EnumType {
	return &file_livegrep_proto_enumTypes[0]
}

func (x SearchStats_ExitReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchStats_ExitReason.Descriptor instead.
func (SearchStats_ExitReason) EnumDescriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{4, 0}
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line string `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
	// file contains a list of regular expressions to match a file's path
	// against. A file must match *all* given patterns.
	File         []string `protobuf:"bytes,2,rep,name=file,proto3" json:"file,omitempty"`
	Repo         string   `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty"`
	Tags         string   `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	FoldCase     bool     `protobuf:"varint,5,opt,name=fold_case,json=foldCase,proto3" json:"fold_case,omitempty"`
	NotFile      []string `protobuf:"bytes,6,rep,name=not_file,json=notFile,proto3" json:"not_file,omitempty"`
	NotRepo      string   `protobuf:"bytes,7,opt,name=not_repo,json=notRepo,proto3" json:"not_repo,omitempty"`
	NotTags      string   `protobuf:"bytes,8,opt,name=not_tags,json=notTags,proto3" json:"not_tags,omitempty"`
	MaxMatches   int32    `protobuf:"varint,9,opt,name=max_matches,json=maxMatches,proto3" json:"max_matches,omitempty"`
	FilenameOnly bool     `protobuf:"varint,10,opt,name=filename_only,json=filenameOnly,proto3" json:"filename_only,omitempty"`
	ContextLines int32    `protobuf:"varint,11,opt,name=context_lines,json=contextLines,proto3" json:"context_lines,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{0}
}

func (x *Query) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *Query) GetFile() []string {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Query) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *Query) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *Query) GetFoldCase() bool {
	if x != nil {
		return x.FoldCase
	}
	return false
}

func (x *Query) GetNotFile() []string {
	if x != nil {
		return x.NotFile
	}
	return nil
}

func (x *Query) GetNotRepo() string {
	if x != nil {
		return x.NotRepo
	}
	return ""
}

func (x *Query) GetNotTags() string {
	if x != nil {
		return x.NotTags
	}
	return ""
}

func (x *Query) GetMaxMatches() int32 {
	if x != nil {
		return x.MaxMatches
	}
	return 0
}

func (x *Query) GetFilenameOnly() bool {
	if x != nil {
		return x.FilenameOnly
	}
	return false
}

func (x *Query) GetContextLines() int32 {
	if x != nil {
		return x.ContextLines
	}
	return 0
}

type Bounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  int32 `protobuf:"varint,1,opt,name=left,proto3" json:"left,omitempty"`
	Right int32 `protobuf:"varint,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *Bounds) Reset() {
	*x = Bounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bounds) ProtoMessage() {}

func (x *Bounds) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bounds.ProtoReflect.Descriptor instead.
func (*Bounds) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{1}
}

func (x *Bounds) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *Bounds) GetRight() int32 {
	if x != nil {
		return x.Right
	}
	return 0
}

type SearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tree          string   `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	Version       string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Path          string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	LineNumber    int64    `protobuf:"varint,4,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"`
	ContextBefore []string `protobuf:"bytes,5,rep,name=context_before,json=contextBefore,proto3" json:"context_before,omitempty"`
	ContextAfter  []string `protobuf:"bytes,6,rep,name=context_after,json=contextAfter,proto3" json:"context_after,omitempty"`
	Bounds        *Bounds  `protobuf:"bytes,7,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Line          string   `protobuf:"bytes,8,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{2}
}

func (x *SearchResult) GetTree() string {
	if x != nil {
		return x.Tree
	}
	return ""
}

func (x *SearchResult) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SearchResult) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SearchResult) GetLineNumber() int64 {
	if x != nil {
		return x.LineNumber
	}
	return 0
}

func (x *SearchResult) GetContextBefore() []string {
	if x != nil {
		return x.ContextBefore
	}
	return nil
}

func (x *SearchResult) GetContextAfter() []string {
	if x != nil {
		return x.ContextAfter
	}
	return nil
}

func (x *SearchResult) GetBounds() *Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *SearchResult) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

type FileResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tree    string  `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	Version string  `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Path    string  `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Bounds  *Bounds `protobuf:"bytes,4,opt,name=bounds,proto3" json:"bounds,omitempty"`
}

func (x *FileResult) Reset() {
	*x = FileResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResult) ProtoMessage() {}

func (x *FileResult) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResult.ProtoReflect.Descriptor instead.
func (*FileResult) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{3}
}

func (x *FileResult) GetTree() string {
	if x != nil {
		return x.Tree
	}
	return ""
}

func (x *FileResult) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FileResult) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileResult) GetBounds() *Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

type SearchStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Re2Time     int64                  `protobuf:"varint,1,opt,name=re2_time,json=re2Time,proto3" json:"re2_time,omitempty"`
	GitTime     int64                  `protobuf:"varint,2,opt,name=git_time,json=gitTime,proto3" json:"git_time,omitempty"`
	SortTime    int64                  `protobuf:"varint,3,opt,name=sort_time,json=sortTime,proto3" json:"sort_time,omitempty"`
	IndexTime   int64                  `protobuf:"varint,4,opt,name=index_time,json=indexTime,proto3" json:"index_time,omitempty"`
	AnalyzeTime int64                  `protobuf:"varint,5,opt,name=analyze_time,json=analyzeTime,proto3" json:"analyze_time,omitempty"`
	TotalTime   int64                  `protobuf:"varint,7,opt,name=total_time,json=totalTime,proto3" json:"total_time,omitempty"`
	ExitReason  SearchStats_ExitReason `protobuf:"varint,6,opt,name=exit_reason,json=exitReason,proto3,enum=SearchStats_ExitReason" json:"exit_reason,omitempty"`
}

func (x *SearchStats) Reset() {
	*x = SearchStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStats) ProtoMessage() {}

func (x *SearchStats) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStats.ProtoReflect.Descriptor instead.
func (*SearchStats) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{4}
}

func (x *SearchStats) GetRe2Time() int64 {
	if x != nil {
		return x.Re2Time
	}
	return 0
}

func (x *SearchStats) GetGitTime() int64 {
	if x != nil {
		return x.GitTime
	}
	return 0
}

func (x *SearchStats) GetSortTime() int64 {
	if x != nil {
		return x.SortTime
	}
	return 0
}

func (x *SearchStats) GetIndexTime() int64 {
	if x != nil {
		return x.IndexTime
	}
	return 0
}

func (x *SearchStats) GetAnalyzeTime() int64 {
	if x != nil {
		return x.AnalyzeTime
	}
	return 0
}

func (x *SearchStats) GetTotalTime() int64 {
	if x != nil {
		return x.TotalTime
	}
	return 0
}

func (x *SearchStats) GetExitReason() SearchStats_ExitReason {
	if x != nil {
		return x.ExitReason
	}
	return SearchStats_NONE
}

type ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Trees   []*ServerInfo_Tree `protobuf:"bytes,2,rep,name=trees,proto3" json:"trees,omitempty"`
	HasTags bool               `protobuf:"varint,3,opt,name=has_tags,json=hasTags,proto3" json:"has_tags,omitempty"`
	// unix timestamp (seconds)
	IndexTime int64 `protobuf:"varint,4,opt,name=index_time,json=indexTime,proto3" json:"index_time,omitempty"`
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{5}
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetTrees() []*ServerInfo_Tree {
	if x != nil {
		return x.Trees
	}
	return nil
}

func (x *ServerInfo) GetHasTags() bool {
	if x != nil {
		return x.HasTags
	}
	return false
}

func (x *ServerInfo) GetIndexTime() int64 {
	if x != nil {
		return x.IndexTime
	}
	return 0
}

type CodeSearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats       *SearchStats    `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	Results     []*SearchResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	FileResults []*FileResult   `protobuf:"bytes,3,rep,name=file_results,json=fileResults,proto3" json:"file_results,omitempty"`
	// unique index identity that served this request
	IndexName string `protobuf:"bytes,4,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexTime int64  `protobuf:"varint,5,opt,name=index_time,json=indexTime,proto3" json:"index_time,omitempty"`
}

func (x *CodeSearchResult) Reset() {
	*x = CodeSearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeSearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeSearchResult) ProtoMessage() {}

func (x *CodeSearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeSearchResult.ProtoReflect.Descriptor instead.
func (*CodeSearchResult) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{6}
}

func (x *CodeSearchResult) GetStats() *SearchStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *CodeSearchResult) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CodeSearchResult) GetFileResults() []*FileResult {
	if x != nil {
		return x.FileResults
	}
	return nil
}

func (x *CodeSearchResult) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *CodeSearchResult) GetIndexTime() int64 {
	if x != nil {
		return x.IndexTime
	}
	return 0
}

type InfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{7}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{8}
}

type ServerInfo_Tree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version  string    `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Metadata *Metadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ServerInfo_Tree) Reset() {
	*x = ServerInfo_Tree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livegrep_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo_Tree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo_Tree) ProtoMessage() {}

func (x *ServerInfo_Tree) ProtoReflect() protoreflect.Message {
	mi := &file_livegrep_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo_Tree.ProtoReflect.Descriptor instead.
func (*ServerInfo_Tree) Descriptor() ([]byte, []int) {
	return file_livegrep_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ServerInfo_Tree) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo_Tree) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerInfo_Tree) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_livegrep_proto protoreflect.FileDescriptor

var file_livegrep_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x69, 0x76, 0x65, 0x67, 0x72, 0x65, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0,
	0x02, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x65, 0x70, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64,
	0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6f, 0x6c,
	0x64, 0x43, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x6f, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x6f, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4c, 0x69, 0x6e, 0x65,
	0x73, 0x22, 0x32, 0x0a, 0x06, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x06,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x6f, 0x0a, 0x0a, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0xb1, 0x02, 0x0a, 0x0b,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x65, 0x32, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x32, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x69, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0a, 0x65,
	0x78, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x0a, 0x45, 0x78, 0x69,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x02, 0x22,
	0xdf, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x72, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54,
	0x72, 0x65, 0x65, 0x52, 0x05, 0x74, 0x72, 0x65, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61,
	0x73, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0x5b, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xcd, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x6e, 0x0a, 0x0a, 0x43, 0x6f, 0x64,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0c, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x06, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x11, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x18, 0x0a, 0x06, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_livegrep_proto_rawDescOnce sync.Once
	file_livegrep_proto_rawDescData = file_livegrep_proto_rawDesc
)

func file_livegrep_proto_rawDescGZIP() []byte {
	file_livegrep_proto_rawDescOnce.Do(func() {
		file_livegrep_proto_rawDescData = protoimpl.X.CompressGZIP(file_livegrep_proto_rawDescData)
	})
	return file_livegrep_proto_rawDescData
}

var file_livegrep_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_livegrep_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_livegrep_proto_goTypes = []interface{}{
	(SearchStats_ExitReason)(0), // 0: SearchStats.ExitReason
	(*Query)(nil),               // 1: Query
	(*Bounds)(nil),              // 2: Bounds
	(*SearchResult)(nil),        // 3: SearchResult
	(*FileResult)(nil),          // 4: FileResult
	(*SearchStats)(nil),         // 5: SearchStats
	(*ServerInfo)(nil),          // 6: ServerInfo
	(*CodeSearchResult)(nil),    // 7: CodeSearchResult
	(*InfoRequest)(nil),         // 8: InfoRequest
	(*Empty)(nil),               // 9: Empty
	(*ServerInfo_Tree)(nil),     // 10: ServerInfo.Tree
	(*Metadata)(nil),            // 11: Metadata
}
var file_livegrep_proto_depIdxs = []int32{
	2,  // 0: SearchResult.bounds:type_name -> Bounds
	2,  // 1: FileResult.bounds:type_name -> Bounds
	0,  // 2: SearchStats.exit_reason:type_name -> SearchStats.ExitReason
	10, // 3: ServerInfo.trees:type_name -> ServerInfo.Tree
	5,  // 4: CodeSearchResult.stats:type_name -> SearchStats
	3,  // 5: CodeSearchResult.results:type_name -> SearchResult
	4,  // 6: CodeSearchResult.file_results:type_name -> FileResult
	11, // 7: ServerInfo.Tree.metadata:type_name -> Metadata
	8,  // 8: CodeSearch.Info:input_type -> InfoRequest
	1,  // 9: CodeSearch.Search:input_type -> Query
	9,  // 10: CodeSearch.Reload:input_type -> Empty
	6,  // 11: CodeSearch.Info:output_type -> ServerInfo
	7,  // 12: CodeSearch.Search:output_type -> CodeSearchResult
	9,  // 13: CodeSearch.Reload:output_type -> Empty
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_livegrep_proto_init() }
func file_livegrep_proto_init() {
	if File_livegrep_proto != nil {
		return
	}
	file_config_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_livegrep_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livegrep_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livegrep_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livegrep_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livegrep_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livegrep_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livegrep_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeSearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livegrep_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livegrep_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livegrep_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfo_Tree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_livegrep_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_livegrep_proto_goTypes,
		DependencyIndexes: file_livegrep_proto_depIdxs,
		EnumInfos:         file_livegrep_proto_enumTypes,
		MessageInfos:      file_livegrep_proto_msgTypes,
	}.Build()
	File_livegrep_proto = out.File
	file_livegrep_proto_rawDesc = nil
	file_livegrep_proto_goTypes = nil
	file_livegrep_proto_depIdxs = nil
}
