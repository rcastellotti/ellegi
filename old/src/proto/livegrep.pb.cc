// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: livegrep.proto

#include "livegrep.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR Query::Query(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.file_)*/ {},
      /*decltype(_impl_.not_file_)*/ {},
      /*decltype(_impl_.line_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.repo_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.tags_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.not_repo_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.not_tags_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.fold_case_)*/ false,
      /*decltype(_impl_.filename_only_)*/ false,
      /*decltype(_impl_.max_matches_)*/ 0,
      /*decltype(_impl_.context_lines_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct QueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDefaultTypeInternal() {}
  union {
    Query _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDefaultTypeInternal _Query_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Bounds::Bounds(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.left_)*/ 0,
      /*decltype(_impl_.right_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BoundsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoundsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoundsDefaultTypeInternal() {}
  union {
    Bounds _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoundsDefaultTypeInternal _Bounds_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SearchResult::SearchResult(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.context_before_)*/ {},
      /*decltype(_impl_.context_after_)*/ {},
      /*decltype(_impl_.tree_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.version_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.line_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.bounds_)*/ nullptr,
      /*decltype(_impl_.line_number_)*/ ::int64_t{0},
    } {}
struct SearchResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchResultDefaultTypeInternal() {}
  union {
    SearchResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchResultDefaultTypeInternal _SearchResult_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FileResult::FileResult(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.tree_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.version_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.bounds_)*/ nullptr,
    } {}
struct FileResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileResultDefaultTypeInternal() {}
  union {
    FileResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileResultDefaultTypeInternal _FileResult_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SearchStats::SearchStats(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.re2_time_)*/ ::int64_t{0},
      /*decltype(_impl_.git_time_)*/ ::int64_t{0},
      /*decltype(_impl_.sort_time_)*/ ::int64_t{0},
      /*decltype(_impl_.index_time_)*/ ::int64_t{0},
      /*decltype(_impl_.analyze_time_)*/ ::int64_t{0},
      /*decltype(_impl_.total_time_)*/ ::int64_t{0},
      /*decltype(_impl_.exit_reason_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SearchStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchStatsDefaultTypeInternal() {}
  union {
    SearchStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchStatsDefaultTypeInternal _SearchStats_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ServerInfo_Tree::ServerInfo_Tree(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.version_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.metadata_)*/ nullptr,
    } {}
struct ServerInfo_TreeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerInfo_TreeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerInfo_TreeDefaultTypeInternal() {}
  union {
    ServerInfo_Tree _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerInfo_TreeDefaultTypeInternal _ServerInfo_Tree_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ServerInfo::ServerInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.trees_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.index_time_)*/ ::int64_t{0},
      /*decltype(_impl_.has_tags_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ServerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerInfoDefaultTypeInternal() {}
  union {
    ServerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerInfoDefaultTypeInternal _ServerInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CodeSearchResult::CodeSearchResult(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.results_)*/ {},
      /*decltype(_impl_.file_results_)*/ {},
      /*decltype(_impl_.index_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.stats_)*/ nullptr,
      /*decltype(_impl_.index_time_)*/ ::int64_t{0},
    } {}
struct CodeSearchResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CodeSearchResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CodeSearchResultDefaultTypeInternal() {}
  union {
    CodeSearchResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CodeSearchResultDefaultTypeInternal _CodeSearchResult_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR InfoRequest::InfoRequest(::_pbi::ConstantInitialized) {}
struct InfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoRequestDefaultTypeInternal() {}
  union {
    InfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoRequestDefaultTypeInternal _InfoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized) {}
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;
static ::_pb::Metadata file_level_metadata_livegrep_2eproto[10];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_livegrep_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_livegrep_2eproto = nullptr;
const ::uint32_t TableStruct_livegrep_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Query, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.line_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.file_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.fold_case_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.not_file_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.not_repo_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.not_tags_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.max_matches_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.filename_only_),
    PROTOBUF_FIELD_OFFSET(::Query, _impl_.context_lines_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Bounds, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Bounds, _impl_.left_),
    PROTOBUF_FIELD_OFFSET(::Bounds, _impl_.right_),
    PROTOBUF_FIELD_OFFSET(::SearchResult, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SearchResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SearchResult, _impl_.tree_),
    PROTOBUF_FIELD_OFFSET(::SearchResult, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::SearchResult, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SearchResult, _impl_.line_number_),
    PROTOBUF_FIELD_OFFSET(::SearchResult, _impl_.context_before_),
    PROTOBUF_FIELD_OFFSET(::SearchResult, _impl_.context_after_),
    PROTOBUF_FIELD_OFFSET(::SearchResult, _impl_.bounds_),
    PROTOBUF_FIELD_OFFSET(::SearchResult, _impl_.line_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::FileResult, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::FileResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::FileResult, _impl_.tree_),
    PROTOBUF_FIELD_OFFSET(::FileResult, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::FileResult, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::FileResult, _impl_.bounds_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SearchStats, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SearchStats, _impl_.re2_time_),
    PROTOBUF_FIELD_OFFSET(::SearchStats, _impl_.git_time_),
    PROTOBUF_FIELD_OFFSET(::SearchStats, _impl_.sort_time_),
    PROTOBUF_FIELD_OFFSET(::SearchStats, _impl_.index_time_),
    PROTOBUF_FIELD_OFFSET(::SearchStats, _impl_.analyze_time_),
    PROTOBUF_FIELD_OFFSET(::SearchStats, _impl_.total_time_),
    PROTOBUF_FIELD_OFFSET(::SearchStats, _impl_.exit_reason_),
    PROTOBUF_FIELD_OFFSET(::ServerInfo_Tree, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ServerInfo_Tree, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ServerInfo_Tree, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ServerInfo_Tree, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::ServerInfo_Tree, _impl_.metadata_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ServerInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ServerInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ServerInfo, _impl_.trees_),
    PROTOBUF_FIELD_OFFSET(::ServerInfo, _impl_.has_tags_),
    PROTOBUF_FIELD_OFFSET(::ServerInfo, _impl_.index_time_),
    PROTOBUF_FIELD_OFFSET(::CodeSearchResult, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::CodeSearchResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CodeSearchResult, _impl_.stats_),
    PROTOBUF_FIELD_OFFSET(::CodeSearchResult, _impl_.results_),
    PROTOBUF_FIELD_OFFSET(::CodeSearchResult, _impl_.file_results_),
    PROTOBUF_FIELD_OFFSET(::CodeSearchResult, _impl_.index_name_),
    PROTOBUF_FIELD_OFFSET(::CodeSearchResult, _impl_.index_time_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::InfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Empty, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Query)},
        {19, -1, -1, sizeof(::Bounds)},
        {29, 45, -1, sizeof(::SearchResult)},
        {53, 65, -1, sizeof(::FileResult)},
        {69, -1, -1, sizeof(::SearchStats)},
        {84, 95, -1, sizeof(::ServerInfo_Tree)},
        {98, -1, -1, sizeof(::ServerInfo)},
        {110, 123, -1, sizeof(::CodeSearchResult)},
        {128, -1, -1, sizeof(::InfoRequest)},
        {136, -1, -1, sizeof(::Empty)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_Query_default_instance_._instance,
    &::_Bounds_default_instance_._instance,
    &::_SearchResult_default_instance_._instance,
    &::_FileResult_default_instance_._instance,
    &::_SearchStats_default_instance_._instance,
    &::_ServerInfo_Tree_default_instance_._instance,
    &::_ServerInfo_default_instance_._instance,
    &::_CodeSearchResult_default_instance_._instance,
    &::_InfoRequest_default_instance_._instance,
    &::_Empty_default_instance_._instance,
};
const char descriptor_table_protodef_livegrep_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\016livegrep.proto\032\014config.proto\"\313\001\n\005Query"
    "\022\014\n\004line\030\001 \001(\t\022\014\n\004file\030\002 \003(\t\022\014\n\004repo\030\003 \001"
    "(\t\022\014\n\004tags\030\004 \001(\t\022\021\n\tfold_case\030\005 \001(\010\022\020\n\010n"
    "ot_file\030\006 \003(\t\022\020\n\010not_repo\030\007 \001(\t\022\020\n\010not_t"
    "ags\030\010 \001(\t\022\023\n\013max_matches\030\t \001(\005\022\025\n\rfilena"
    "me_only\030\n \001(\010\022\025\n\rcontext_lines\030\013 \001(\005\"%\n\006"
    "Bounds\022\014\n\004left\030\001 \001(\005\022\r\n\005right\030\002 \001(\005\"\246\001\n\014"
    "SearchResult\022\014\n\004tree\030\001 \001(\t\022\017\n\007version\030\002 "
    "\001(\t\022\014\n\004path\030\003 \001(\t\022\023\n\013line_number\030\004 \001(\003\022\026"
    "\n\016context_before\030\005 \003(\t\022\025\n\rcontext_after\030"
    "\006 \003(\t\022\027\n\006bounds\030\007 \001(\0132\007.Bounds\022\014\n\004line\030\010"
    " \001(\t\"R\n\nFileResult\022\014\n\004tree\030\001 \001(\t\022\017\n\007vers"
    "ion\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\027\n\006bounds\030\004 \001(\0132"
    "\007.Bounds\"\346\001\n\013SearchStats\022\020\n\010re2_time\030\001 \001"
    "(\003\022\020\n\010git_time\030\002 \001(\003\022\021\n\tsort_time\030\003 \001(\003\022"
    "\022\n\nindex_time\030\004 \001(\003\022\024\n\014analyze_time\030\005 \001("
    "\003\022\022\n\ntotal_time\030\007 \001(\003\022,\n\013exit_reason\030\006 \001"
    "(\0162\027.SearchStats.ExitReason\"4\n\nExitReaso"
    "n\022\010\n\004NONE\020\000\022\013\n\007TIMEOUT\020\001\022\017\n\013MATCH_LIMIT\020"
    "\002\"\245\001\n\nServerInfo\022\014\n\004name\030\001 \001(\t\022\037\n\005trees\030"
    "\002 \003(\0132\020.ServerInfo.Tree\022\020\n\010has_tags\030\003 \001("
    "\010\022\022\n\nindex_time\030\004 \001(\003\032B\n\004Tree\022\014\n\004name\030\001 "
    "\001(\t\022\017\n\007version\030\002 \001(\t\022\033\n\010metadata\030\003 \001(\0132\t"
    ".Metadata\"\232\001\n\020CodeSearchResult\022\033\n\005stats\030"
    "\001 \001(\0132\014.SearchStats\022\036\n\007results\030\002 \003(\0132\r.S"
    "earchResult\022!\n\014file_results\030\003 \003(\0132\013.File"
    "Result\022\022\n\nindex_name\030\004 \001(\t\022\022\n\nindex_time"
    "\030\005 \001(\003\"\r\n\013InfoRequest\"\007\n\005Empty2n\n\nCodeSe"
    "arch\022!\n\004Info\022\014.InfoRequest\032\013.ServerInfo\022"
    "#\n\006Search\022\006.Query\032\021.CodeSearchResult\022\030\n\006"
    "Reload\022\006.Empty\032\006.EmptyB\010Z\006proto/b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_livegrep_2eproto_deps[1] =
    {
        &::descriptor_table_config_2eproto,
};
static ::absl::once_flag descriptor_table_livegrep_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_livegrep_2eproto = {
    false,
    false,
    1240,
    descriptor_table_protodef_livegrep_2eproto,
    "livegrep.proto",
    &descriptor_table_livegrep_2eproto_once,
    descriptor_table_livegrep_2eproto_deps,
    1,
    10,
    schemas,
    file_default_instances,
    TableStruct_livegrep_2eproto::offsets,
    file_level_metadata_livegrep_2eproto,
    file_level_enum_descriptors_livegrep_2eproto,
    file_level_service_descriptors_livegrep_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_livegrep_2eproto_getter() {
  return &descriptor_table_livegrep_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_livegrep_2eproto(&descriptor_table_livegrep_2eproto);
const ::google::protobuf::EnumDescriptor* SearchStats_ExitReason_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_livegrep_2eproto);
  return file_level_enum_descriptors_livegrep_2eproto[0];
}
bool SearchStats_ExitReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SearchStats_ExitReason SearchStats::NONE;
constexpr SearchStats_ExitReason SearchStats::TIMEOUT;
constexpr SearchStats_ExitReason SearchStats::MATCH_LIMIT;
constexpr SearchStats_ExitReason SearchStats::ExitReason_MIN;
constexpr SearchStats_ExitReason SearchStats::ExitReason_MAX;
constexpr int SearchStats::ExitReason_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Query::_Internal {
 public:
};

Query::Query(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Query)
}
Query::Query(const Query& from) : ::google::protobuf::Message() {
  Query* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){from._impl_.file_},
      decltype(_impl_.not_file_){from._impl_.not_file_},
      decltype(_impl_.line_){},
      decltype(_impl_.repo_){},
      decltype(_impl_.tags_){},
      decltype(_impl_.not_repo_){},
      decltype(_impl_.not_tags_){},
      decltype(_impl_.fold_case_){},
      decltype(_impl_.filename_only_){},
      decltype(_impl_.max_matches_){},
      decltype(_impl_.context_lines_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.line_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.line_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_line().empty()) {
    _this->_impl_.line_.Set(from._internal_line(), _this->GetArenaForAllocation());
  }
  _impl_.repo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.repo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_repo().empty()) {
    _this->_impl_.repo_.Set(from._internal_repo(), _this->GetArenaForAllocation());
  }
  _impl_.tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tags_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tags().empty()) {
    _this->_impl_.tags_.Set(from._internal_tags(), _this->GetArenaForAllocation());
  }
  _impl_.not_repo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.not_repo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_not_repo().empty()) {
    _this->_impl_.not_repo_.Set(from._internal_not_repo(), _this->GetArenaForAllocation());
  }
  _impl_.not_tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.not_tags_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_not_tags().empty()) {
    _this->_impl_.not_tags_.Set(from._internal_not_tags(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.fold_case_, &from._impl_.fold_case_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.context_lines_) -
    reinterpret_cast<char*>(&_impl_.fold_case_)) + sizeof(_impl_.context_lines_));

  // @@protoc_insertion_point(copy_constructor:Query)
}
inline void Query::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.file_){arena},
      decltype(_impl_.not_file_){arena},
      decltype(_impl_.line_){},
      decltype(_impl_.repo_){},
      decltype(_impl_.tags_){},
      decltype(_impl_.not_repo_){},
      decltype(_impl_.not_tags_){},
      decltype(_impl_.fold_case_){false},
      decltype(_impl_.filename_only_){false},
      decltype(_impl_.max_matches_){0},
      decltype(_impl_.context_lines_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.line_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.line_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.repo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.repo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tags_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.not_repo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.not_repo_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.not_tags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.not_tags_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Query::~Query() {
  // @@protoc_insertion_point(destructor:Query)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Query::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_file()->~RepeatedPtrField();
  _internal_mutable_not_file()->~RepeatedPtrField();
  _impl_.line_.Destroy();
  _impl_.repo_.Destroy();
  _impl_.tags_.Destroy();
  _impl_.not_repo_.Destroy();
  _impl_.not_tags_.Destroy();
}
void Query::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Query::Clear() {
// @@protoc_insertion_point(message_clear_start:Query)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_file()->Clear();
  _internal_mutable_not_file()->Clear();
  _impl_.line_.ClearToEmpty();
  _impl_.repo_.ClearToEmpty();
  _impl_.tags_.ClearToEmpty();
  _impl_.not_repo_.ClearToEmpty();
  _impl_.not_tags_.ClearToEmpty();
  ::memset(&_impl_.fold_case_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.context_lines_) -
      reinterpret_cast<char*>(&_impl_.fold_case_)) + sizeof(_impl_.context_lines_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Query::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 62, 2> Query::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Query_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string line = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.line_)}},
    // repeated string file = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.file_)}},
    // string repo = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.repo_)}},
    // string tags = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.tags_)}},
    // bool fold_case = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Query, _impl_.fold_case_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.fold_case_)}},
    // repeated string not_file = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.not_file_)}},
    // string not_repo = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.not_repo_)}},
    // string not_tags = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.not_tags_)}},
    // int32 max_matches = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Query, _impl_.max_matches_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.max_matches_)}},
    // bool filename_only = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Query, _impl_.filename_only_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.filename_only_)}},
    // int32 context_lines = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Query, _impl_.context_lines_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Query, _impl_.context_lines_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string line = 1;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.line_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string file = 2;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.file_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string repo = 3;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.repo_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tags = 4;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool fold_case = 5;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.fold_case_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated string not_file = 6;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.not_file_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string not_repo = 7;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.not_repo_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string not_tags = 8;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.not_tags_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 max_matches = 9;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.max_matches_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool filename_only = 10;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.filename_only_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 context_lines = 11;
    {PROTOBUF_FIELD_OFFSET(Query, _impl_.context_lines_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\5\4\4\4\4\0\10\10\10\0\0\0\0\0\0\0"
    "Query"
    "line"
    "file"
    "repo"
    "tags"
    "not_file"
    "not_repo"
    "not_tags"
  }},
};

::uint8_t* Query::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Query)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string line = 1;
  if (!this->_internal_line().empty()) {
    const std::string& _s = this->_internal_line();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Query.line");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string file = 2;
  for (int i = 0, n = this->_internal_file_size(); i < n; ++i) {
    const auto& s = this->_internal_file().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Query.file");
    target = stream->WriteString(2, s, target);
  }

  // string repo = 3;
  if (!this->_internal_repo().empty()) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Query.repo");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string tags = 4;
  if (!this->_internal_tags().empty()) {
    const std::string& _s = this->_internal_tags();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Query.tags");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // bool fold_case = 5;
  if (this->_internal_fold_case() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_fold_case(), target);
  }

  // repeated string not_file = 6;
  for (int i = 0, n = this->_internal_not_file_size(); i < n; ++i) {
    const auto& s = this->_internal_not_file().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Query.not_file");
    target = stream->WriteString(6, s, target);
  }

  // string not_repo = 7;
  if (!this->_internal_not_repo().empty()) {
    const std::string& _s = this->_internal_not_repo();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Query.not_repo");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string not_tags = 8;
  if (!this->_internal_not_tags().empty()) {
    const std::string& _s = this->_internal_not_tags();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Query.not_tags");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // int32 max_matches = 9;
  if (this->_internal_max_matches() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_max_matches(), target);
  }

  // bool filename_only = 10;
  if (this->_internal_filename_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        10, this->_internal_filename_only(), target);
  }

  // int32 context_lines = 11;
  if (this->_internal_context_lines() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_context_lines(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Query)
  return target;
}

::size_t Query::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Query)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string file = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_file().size());
  for (int i = 0, n = _internal_file().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_file().Get(i));
  }
  // repeated string not_file = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_not_file().size());
  for (int i = 0, n = _internal_not_file().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_not_file().Get(i));
  }
  // string line = 1;
  if (!this->_internal_line().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_line());
  }

  // string repo = 3;
  if (!this->_internal_repo().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_repo());
  }

  // string tags = 4;
  if (!this->_internal_tags().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tags());
  }

  // string not_repo = 7;
  if (!this->_internal_not_repo().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_not_repo());
  }

  // string not_tags = 8;
  if (!this->_internal_not_tags().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_not_tags());
  }

  // bool fold_case = 5;
  if (this->_internal_fold_case() != 0) {
    total_size += 2;
  }

  // bool filename_only = 10;
  if (this->_internal_filename_only() != 0) {
    total_size += 2;
  }

  // int32 max_matches = 9;
  if (this->_internal_max_matches() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_max_matches());
  }

  // int32 context_lines = 11;
  if (this->_internal_context_lines() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_context_lines());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Query::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Query::MergeImpl
};
const ::google::protobuf::Message::ClassData*Query::GetClassData() const { return &_class_data_; }


void Query::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Query*>(&to_msg);
  auto& from = static_cast<const Query&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Query)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_file()->MergeFrom(from._internal_file());
  _this->_internal_mutable_not_file()->MergeFrom(from._internal_not_file());
  if (!from._internal_line().empty()) {
    _this->_internal_set_line(from._internal_line());
  }
  if (!from._internal_repo().empty()) {
    _this->_internal_set_repo(from._internal_repo());
  }
  if (!from._internal_tags().empty()) {
    _this->_internal_set_tags(from._internal_tags());
  }
  if (!from._internal_not_repo().empty()) {
    _this->_internal_set_not_repo(from._internal_not_repo());
  }
  if (!from._internal_not_tags().empty()) {
    _this->_internal_set_not_tags(from._internal_not_tags());
  }
  if (from._internal_fold_case() != 0) {
    _this->_internal_set_fold_case(from._internal_fold_case());
  }
  if (from._internal_filename_only() != 0) {
    _this->_internal_set_filename_only(from._internal_filename_only());
  }
  if (from._internal_max_matches() != 0) {
    _this->_internal_set_max_matches(from._internal_max_matches());
  }
  if (from._internal_context_lines() != 0) {
    _this->_internal_set_context_lines(from._internal_context_lines());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Query::CopyFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Query::IsInitialized() const {
  return true;
}

void Query::InternalSwap(Query* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.file_.InternalSwap(&other->_impl_.file_);
  _impl_.not_file_.InternalSwap(&other->_impl_.not_file_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.line_, lhs_arena,
                                       &other->_impl_.line_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, lhs_arena,
                                       &other->_impl_.repo_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tags_, lhs_arena,
                                       &other->_impl_.tags_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.not_repo_, lhs_arena,
                                       &other->_impl_.not_repo_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.not_tags_, lhs_arena,
                                       &other->_impl_.not_tags_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Query, _impl_.context_lines_)
      + sizeof(Query::_impl_.context_lines_)
      - PROTOBUF_FIELD_OFFSET(Query, _impl_.fold_case_)>(
          reinterpret_cast<char*>(&_impl_.fold_case_),
          reinterpret_cast<char*>(&other->_impl_.fold_case_));
}

::google::protobuf::Metadata Query::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[0]);
}
// ===================================================================

class Bounds::_Internal {
 public:
};

Bounds::Bounds(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Bounds)
}
Bounds::Bounds(const Bounds& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Bounds)
}
inline void Bounds::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.left_){0},
      decltype(_impl_.right_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
Bounds::~Bounds() {
  // @@protoc_insertion_point(destructor:Bounds)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Bounds::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Bounds::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Bounds::Clear() {
// @@protoc_insertion_point(message_clear_start:Bounds)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.left_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.right_) -
      reinterpret_cast<char*>(&_impl_.left_)) + sizeof(_impl_.right_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Bounds::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Bounds::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Bounds_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 right = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Bounds, _impl_.right_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Bounds, _impl_.right_)}},
    // int32 left = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Bounds, _impl_.left_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Bounds, _impl_.left_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 left = 1;
    {PROTOBUF_FIELD_OFFSET(Bounds, _impl_.left_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 right = 2;
    {PROTOBUF_FIELD_OFFSET(Bounds, _impl_.right_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Bounds::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Bounds)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 left = 1;
  if (this->_internal_left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_left(), target);
  }

  // int32 right = 2;
  if (this->_internal_right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_right(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Bounds)
  return target;
}

::size_t Bounds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Bounds)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 left = 1;
  if (this->_internal_left() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_left());
  }

  // int32 right = 2;
  if (this->_internal_right() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_right());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Bounds::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Bounds::MergeImpl
};
const ::google::protobuf::Message::ClassData*Bounds::GetClassData() const { return &_class_data_; }


void Bounds::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Bounds*>(&to_msg);
  auto& from = static_cast<const Bounds&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Bounds)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_left() != 0) {
    _this->_internal_set_left(from._internal_left());
  }
  if (from._internal_right() != 0) {
    _this->_internal_set_right(from._internal_right());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Bounds::CopyFrom(const Bounds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Bounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Bounds::IsInitialized() const {
  return true;
}

void Bounds::InternalSwap(Bounds* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Bounds, _impl_.right_)
      + sizeof(Bounds::_impl_.right_)
      - PROTOBUF_FIELD_OFFSET(Bounds, _impl_.left_)>(
          reinterpret_cast<char*>(&_impl_.left_),
          reinterpret_cast<char*>(&other->_impl_.left_));
}

::google::protobuf::Metadata Bounds::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[1]);
}
// ===================================================================

class SearchResult::_Internal {
 public:
  using HasBits = decltype(std::declval<SearchResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SearchResult, _impl_._has_bits_);
  static const ::Bounds& bounds(const SearchResult* msg);
  static void set_has_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Bounds& SearchResult::_Internal::bounds(const SearchResult* msg) {
  return *msg->_impl_.bounds_;
}
SearchResult::SearchResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SearchResult)
}
SearchResult::SearchResult(const SearchResult& from) : ::google::protobuf::Message() {
  SearchResult* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.context_before_){from._impl_.context_before_},
      decltype(_impl_.context_after_){from._impl_.context_after_},
      decltype(_impl_.tree_){},
      decltype(_impl_.version_){},
      decltype(_impl_.path_){},
      decltype(_impl_.line_){},
      decltype(_impl_.bounds_){nullptr},
      decltype(_impl_.line_number_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.tree_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tree_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tree().empty()) {
    _this->_impl_.tree_.Set(from._internal_tree(), _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  _impl_.line_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.line_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_line().empty()) {
    _this->_impl_.line_.Set(from._internal_line(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.bounds_ = new ::Bounds(*from._impl_.bounds_);
  }
  _this->_impl_.line_number_ = from._impl_.line_number_;

  // @@protoc_insertion_point(copy_constructor:SearchResult)
}
inline void SearchResult::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.context_before_){arena},
      decltype(_impl_.context_after_){arena},
      decltype(_impl_.tree_){},
      decltype(_impl_.version_){},
      decltype(_impl_.path_){},
      decltype(_impl_.line_){},
      decltype(_impl_.bounds_){nullptr},
      decltype(_impl_.line_number_){::int64_t{0}},
  };
  _impl_.tree_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tree_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.line_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.line_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SearchResult::~SearchResult() {
  // @@protoc_insertion_point(destructor:SearchResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SearchResult::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_context_before()->~RepeatedPtrField();
  _internal_mutable_context_after()->~RepeatedPtrField();
  _impl_.tree_.Destroy();
  _impl_.version_.Destroy();
  _impl_.path_.Destroy();
  _impl_.line_.Destroy();
  if (this != internal_default_instance()) delete _impl_.bounds_;
}
void SearchResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchResult)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_context_before()->Clear();
  _internal_mutable_context_after()->Clear();
  _impl_.tree_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  _impl_.line_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bounds_ != nullptr);
    _impl_.bounds_->Clear();
  }
  _impl_.line_number_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SearchResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 75, 2> SearchResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SearchResult, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SearchResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string line = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.line_)}},
    // string tree = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.tree_)}},
    // string version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.version_)}},
    // string path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.path_)}},
    // int64 line_number = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchResult, _impl_.line_number_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.line_number_)}},
    // repeated string context_before = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.context_before_)}},
    // repeated string context_after = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.context_after_)}},
    // .Bounds bounds = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.bounds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tree = 1;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.tree_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string path = 3;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 line_number = 4;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.line_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated string context_before = 5;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.context_before_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string context_after = 6;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.context_after_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .Bounds bounds = 7;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.bounds_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string line = 8;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.line_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Bounds>()},
  }}, {{
    "\14\4\7\4\0\16\15\0\4\0\0\0\0\0\0\0"
    "SearchResult"
    "tree"
    "version"
    "path"
    "context_before"
    "context_after"
    "line"
  }},
};

::uint8_t* SearchResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SearchResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string tree = 1;
  if (!this->_internal_tree().empty()) {
    const std::string& _s = this->_internal_tree();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SearchResult.tree");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SearchResult.version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string path = 3;
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SearchResult.path");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int64 line_number = 4;
  if (this->_internal_line_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_line_number(), target);
  }

  // repeated string context_before = 5;
  for (int i = 0, n = this->_internal_context_before_size(); i < n; ++i) {
    const auto& s = this->_internal_context_before().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SearchResult.context_before");
    target = stream->WriteString(5, s, target);
  }

  // repeated string context_after = 6;
  for (int i = 0, n = this->_internal_context_after_size(); i < n; ++i) {
    const auto& s = this->_internal_context_after().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SearchResult.context_after");
    target = stream->WriteString(6, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Bounds bounds = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::bounds(this),
        _Internal::bounds(this).GetCachedSize(), target, stream);
  }

  // string line = 8;
  if (!this->_internal_line().empty()) {
    const std::string& _s = this->_internal_line();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SearchResult.line");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchResult)
  return target;
}

::size_t SearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string context_before = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_context_before().size());
  for (int i = 0, n = _internal_context_before().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_context_before().Get(i));
  }
  // repeated string context_after = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_context_after().size());
  for (int i = 0, n = _internal_context_after().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_context_after().Get(i));
  }
  // string tree = 1;
  if (!this->_internal_tree().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tree());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // string path = 3;
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // string line = 8;
  if (!this->_internal_line().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_line());
  }

  // .Bounds bounds = 7;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.bounds_);
  }

  // int64 line_number = 4;
  if (this->_internal_line_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_line_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SearchResult::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SearchResult::MergeImpl
};
const ::google::protobuf::Message::ClassData*SearchResult::GetClassData() const { return &_class_data_; }


void SearchResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SearchResult*>(&to_msg);
  auto& from = static_cast<const SearchResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SearchResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_context_before()->MergeFrom(from._internal_context_before());
  _this->_internal_mutable_context_after()->MergeFrom(from._internal_context_after());
  if (!from._internal_tree().empty()) {
    _this->_internal_set_tree(from._internal_tree());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_line().empty()) {
    _this->_internal_set_line(from._internal_line());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bounds()->::Bounds::MergeFrom(
        from._internal_bounds());
  }
  if (from._internal_line_number() != 0) {
    _this->_internal_set_line_number(from._internal_line_number());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchResult::CopyFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SearchResult::IsInitialized() const {
  return true;
}

void SearchResult::InternalSwap(SearchResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.context_before_.InternalSwap(&other->_impl_.context_before_);
  _impl_.context_after_.InternalSwap(&other->_impl_.context_after_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tree_, lhs_arena,
                                       &other->_impl_.tree_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.line_, lhs_arena,
                                       &other->_impl_.line_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.line_number_)
      + sizeof(SearchResult::_impl_.line_number_)
      - PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.bounds_)>(
          reinterpret_cast<char*>(&_impl_.bounds_),
          reinterpret_cast<char*>(&other->_impl_.bounds_));
}

::google::protobuf::Metadata SearchResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[2]);
}
// ===================================================================

class FileResult::_Internal {
 public:
  using HasBits = decltype(std::declval<FileResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FileResult, _impl_._has_bits_);
  static const ::Bounds& bounds(const FileResult* msg);
  static void set_has_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Bounds& FileResult::_Internal::bounds(const FileResult* msg) {
  return *msg->_impl_.bounds_;
}
FileResult::FileResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FileResult)
}
FileResult::FileResult(const FileResult& from) : ::google::protobuf::Message() {
  FileResult* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tree_){},
      decltype(_impl_.version_){},
      decltype(_impl_.path_){},
      decltype(_impl_.bounds_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.tree_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tree_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tree().empty()) {
    _this->_impl_.tree_.Set(from._internal_tree(), _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.bounds_ = new ::Bounds(*from._impl_.bounds_);
  }

  // @@protoc_insertion_point(copy_constructor:FileResult)
}
inline void FileResult::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.tree_){},
      decltype(_impl_.version_){},
      decltype(_impl_.path_){},
      decltype(_impl_.bounds_){nullptr},
  };
  _impl_.tree_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.tree_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
FileResult::~FileResult() {
  // @@protoc_insertion_point(destructor:FileResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FileResult::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tree_.Destroy();
  _impl_.version_.Destroy();
  _impl_.path_.Destroy();
  if (this != internal_default_instance()) delete _impl_.bounds_;
}
void FileResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FileResult::Clear() {
// @@protoc_insertion_point(message_clear_start:FileResult)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tree_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bounds_ != nullptr);
    _impl_.bounds_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FileResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 34, 2> FileResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileResult, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FileResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Bounds bounds = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(FileResult, _impl_.bounds_)}},
    // string tree = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FileResult, _impl_.tree_)}},
    // string version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FileResult, _impl_.version_)}},
    // string path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FileResult, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tree = 1;
    {PROTOBUF_FIELD_OFFSET(FileResult, _impl_.tree_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2;
    {PROTOBUF_FIELD_OFFSET(FileResult, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string path = 3;
    {PROTOBUF_FIELD_OFFSET(FileResult, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Bounds bounds = 4;
    {PROTOBUF_FIELD_OFFSET(FileResult, _impl_.bounds_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Bounds>()},
  }}, {{
    "\12\4\7\4\0\0\0\0"
    "FileResult"
    "tree"
    "version"
    "path"
  }},
};

::uint8_t* FileResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FileResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string tree = 1;
  if (!this->_internal_tree().empty()) {
    const std::string& _s = this->_internal_tree();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FileResult.tree");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FileResult.version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string path = 3;
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FileResult.path");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Bounds bounds = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bounds(this),
        _Internal::bounds(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileResult)
  return target;
}

::size_t FileResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FileResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tree = 1;
  if (!this->_internal_tree().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tree());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // string path = 3;
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // .Bounds bounds = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.bounds_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FileResult::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FileResult::MergeImpl
};
const ::google::protobuf::Message::ClassData*FileResult::GetClassData() const { return &_class_data_; }


void FileResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FileResult*>(&to_msg);
  auto& from = static_cast<const FileResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FileResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tree().empty()) {
    _this->_internal_set_tree(from._internal_tree());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bounds()->::Bounds::MergeFrom(
        from._internal_bounds());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FileResult::CopyFrom(const FileResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FileResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FileResult::IsInitialized() const {
  return true;
}

void FileResult::InternalSwap(FileResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tree_, lhs_arena,
                                       &other->_impl_.tree_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  swap(_impl_.bounds_, other->_impl_.bounds_);
}

::google::protobuf::Metadata FileResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[3]);
}
// ===================================================================

class SearchStats::_Internal {
 public:
};

SearchStats::SearchStats(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SearchStats)
}
SearchStats::SearchStats(const SearchStats& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SearchStats)
}
inline void SearchStats::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.re2_time_){::int64_t{0}},
      decltype(_impl_.git_time_){::int64_t{0}},
      decltype(_impl_.sort_time_){::int64_t{0}},
      decltype(_impl_.index_time_){::int64_t{0}},
      decltype(_impl_.analyze_time_){::int64_t{0}},
      decltype(_impl_.total_time_){::int64_t{0}},
      decltype(_impl_.exit_reason_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SearchStats::~SearchStats() {
  // @@protoc_insertion_point(destructor:SearchStats)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SearchStats::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SearchStats::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SearchStats::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchStats)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.re2_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.exit_reason_) -
      reinterpret_cast<char*>(&_impl_.re2_time_)) + sizeof(_impl_.exit_reason_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SearchStats::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> SearchStats::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SearchStats_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 re2_time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchStats, _impl_.re2_time_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.re2_time_)}},
    // int64 git_time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchStats, _impl_.git_time_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.git_time_)}},
    // int64 sort_time = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchStats, _impl_.sort_time_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.sort_time_)}},
    // int64 index_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchStats, _impl_.index_time_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.index_time_)}},
    // int64 analyze_time = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchStats, _impl_.analyze_time_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.analyze_time_)}},
    // .SearchStats.ExitReason exit_reason = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SearchStats, _impl_.exit_reason_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.exit_reason_)}},
    // int64 total_time = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchStats, _impl_.total_time_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.total_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 re2_time = 1;
    {PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.re2_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 git_time = 2;
    {PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.git_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 sort_time = 3;
    {PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.sort_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 index_time = 4;
    {PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.index_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 analyze_time = 5;
    {PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.analyze_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .SearchStats.ExitReason exit_reason = 6;
    {PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.exit_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 total_time = 7;
    {PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.total_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SearchStats::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SearchStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 re2_time = 1;
  if (this->_internal_re2_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_re2_time(), target);
  }

  // int64 git_time = 2;
  if (this->_internal_git_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_git_time(), target);
  }

  // int64 sort_time = 3;
  if (this->_internal_sort_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_sort_time(), target);
  }

  // int64 index_time = 4;
  if (this->_internal_index_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_index_time(), target);
  }

  // int64 analyze_time = 5;
  if (this->_internal_analyze_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_analyze_time(), target);
  }

  // .SearchStats.ExitReason exit_reason = 6;
  if (this->_internal_exit_reason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_exit_reason(), target);
  }

  // int64 total_time = 7;
  if (this->_internal_total_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_total_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchStats)
  return target;
}

::size_t SearchStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 re2_time = 1;
  if (this->_internal_re2_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_re2_time());
  }

  // int64 git_time = 2;
  if (this->_internal_git_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_git_time());
  }

  // int64 sort_time = 3;
  if (this->_internal_sort_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_sort_time());
  }

  // int64 index_time = 4;
  if (this->_internal_index_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_index_time());
  }

  // int64 analyze_time = 5;
  if (this->_internal_analyze_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_analyze_time());
  }

  // int64 total_time = 7;
  if (this->_internal_total_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total_time());
  }

  // .SearchStats.ExitReason exit_reason = 6;
  if (this->_internal_exit_reason() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_exit_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SearchStats::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SearchStats::MergeImpl
};
const ::google::protobuf::Message::ClassData*SearchStats::GetClassData() const { return &_class_data_; }


void SearchStats::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SearchStats*>(&to_msg);
  auto& from = static_cast<const SearchStats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SearchStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_re2_time() != 0) {
    _this->_internal_set_re2_time(from._internal_re2_time());
  }
  if (from._internal_git_time() != 0) {
    _this->_internal_set_git_time(from._internal_git_time());
  }
  if (from._internal_sort_time() != 0) {
    _this->_internal_set_sort_time(from._internal_sort_time());
  }
  if (from._internal_index_time() != 0) {
    _this->_internal_set_index_time(from._internal_index_time());
  }
  if (from._internal_analyze_time() != 0) {
    _this->_internal_set_analyze_time(from._internal_analyze_time());
  }
  if (from._internal_total_time() != 0) {
    _this->_internal_set_total_time(from._internal_total_time());
  }
  if (from._internal_exit_reason() != 0) {
    _this->_internal_set_exit_reason(from._internal_exit_reason());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchStats::CopyFrom(const SearchStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SearchStats::IsInitialized() const {
  return true;
}

void SearchStats::InternalSwap(SearchStats* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.exit_reason_)
      + sizeof(SearchStats::_impl_.exit_reason_)
      - PROTOBUF_FIELD_OFFSET(SearchStats, _impl_.re2_time_)>(
          reinterpret_cast<char*>(&_impl_.re2_time_),
          reinterpret_cast<char*>(&other->_impl_.re2_time_));
}

::google::protobuf::Metadata SearchStats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[4]);
}
// ===================================================================

class ServerInfo_Tree::_Internal {
 public:
  using HasBits = decltype(std::declval<ServerInfo_Tree>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ServerInfo_Tree, _impl_._has_bits_);
  static const ::Metadata& metadata(const ServerInfo_Tree* msg);
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Metadata& ServerInfo_Tree::_Internal::metadata(const ServerInfo_Tree* msg) {
  return *msg->_impl_.metadata_;
}
void ServerInfo_Tree::clear_metadata() {
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ServerInfo_Tree::ServerInfo_Tree(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServerInfo.Tree)
}
ServerInfo_Tree::ServerInfo_Tree(const ServerInfo_Tree& from) : ::google::protobuf::Message() {
  ServerInfo_Tree* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.version_){},
      decltype(_impl_.metadata_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.metadata_ = new ::Metadata(*from._impl_.metadata_);
  }

  // @@protoc_insertion_point(copy_constructor:ServerInfo.Tree)
}
inline void ServerInfo_Tree::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.version_){},
      decltype(_impl_.metadata_){nullptr},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ServerInfo_Tree::~ServerInfo_Tree() {
  // @@protoc_insertion_point(destructor:ServerInfo.Tree)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerInfo_Tree::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metadata_;
}
void ServerInfo_Tree::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ServerInfo_Tree::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerInfo.Tree)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.metadata_ != nullptr);
    _impl_.metadata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerInfo_Tree::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 35, 2> ServerInfo_Tree::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerInfo_Tree, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServerInfo_Tree_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo_Tree, _impl_.name_)}},
    // string version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo_Tree, _impl_.version_)}},
    // .Metadata metadata = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ServerInfo_Tree, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ServerInfo_Tree, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2;
    {PROTOBUF_FIELD_OFFSET(ServerInfo_Tree, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Metadata metadata = 3;
    {PROTOBUF_FIELD_OFFSET(ServerInfo_Tree, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Metadata>()},
  }}, {{
    "\17\4\7\0\0\0\0\0"
    "ServerInfo.Tree"
    "name"
    "version"
  }},
};

::uint8_t* ServerInfo_Tree::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerInfo.Tree)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServerInfo.Tree.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServerInfo.Tree.version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Metadata metadata = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerInfo.Tree)
  return target;
}

::size_t ServerInfo_Tree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerInfo.Tree)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // .Metadata metadata = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerInfo_Tree::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ServerInfo_Tree::MergeImpl
};
const ::google::protobuf::Message::ClassData*ServerInfo_Tree::GetClassData() const { return &_class_data_; }


void ServerInfo_Tree::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerInfo_Tree*>(&to_msg);
  auto& from = static_cast<const ServerInfo_Tree&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerInfo.Tree)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_metadata()->::Metadata::MergeFrom(
        from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerInfo_Tree::CopyFrom(const ServerInfo_Tree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerInfo.Tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerInfo_Tree::IsInitialized() const {
  return true;
}

void ServerInfo_Tree::InternalSwap(ServerInfo_Tree* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::google::protobuf::Metadata ServerInfo_Tree::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[5]);
}
// ===================================================================

class ServerInfo::_Internal {
 public:
};

ServerInfo::ServerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServerInfo)
}
ServerInfo::ServerInfo(const ServerInfo& from) : ::google::protobuf::Message() {
  ServerInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trees_){from._impl_.trees_},
      decltype(_impl_.name_){},
      decltype(_impl_.index_time_){},
      decltype(_impl_.has_tags_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.index_time_, &from._impl_.index_time_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.has_tags_) -
    reinterpret_cast<char*>(&_impl_.index_time_)) + sizeof(_impl_.has_tags_));

  // @@protoc_insertion_point(copy_constructor:ServerInfo)
}
inline void ServerInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.trees_){arena},
      decltype(_impl_.name_){},
      decltype(_impl_.index_time_){::int64_t{0}},
      decltype(_impl_.has_tags_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ServerInfo::~ServerInfo() {
  // @@protoc_insertion_point(destructor:ServerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trees_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}
void ServerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_trees()->Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.index_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.has_tags_) -
      reinterpret_cast<char*>(&_impl_.index_time_)) + sizeof(_impl_.has_tags_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 23, 2> ServerInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 index_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerInfo, _impl_.index_time_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.index_time_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.name_)}},
    // repeated .ServerInfo.Tree trees = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.trees_)}},
    // bool has_tags = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ServerInfo, _impl_.has_tags_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.has_tags_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .ServerInfo.Tree trees = 2;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.trees_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool has_tags = 3;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.has_tags_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 index_time = 4;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.index_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ServerInfo_Tree>()},
  }}, {{
    "\12\4\0\0\0\0\0\0"
    "ServerInfo"
    "name"
  }},
};

::uint8_t* ServerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServerInfo.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .ServerInfo.Tree trees = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trees_size()); i < n; i++) {
    const auto& repfield = this->_internal_trees().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool has_tags = 3;
  if (this->_internal_has_tags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_has_tags(), target);
  }

  // int64 index_time = 4;
  if (this->_internal_index_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_index_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerInfo)
  return target;
}

::size_t ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ServerInfo.Tree trees = 2;
  total_size += 1UL * this->_internal_trees_size();
  for (const auto& msg : this->_internal_trees()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int64 index_time = 4;
  if (this->_internal_index_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_index_time());
  }

  // bool has_tags = 3;
  if (this->_internal_has_tags() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ServerInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*ServerInfo::GetClassData() const { return &_class_data_; }


void ServerInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerInfo*>(&to_msg);
  auto& from = static_cast<const ServerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trees()->MergeFrom(from._internal_trees());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_index_time() != 0) {
    _this->_internal_set_index_time(from._internal_index_time());
  }
  if (from._internal_has_tags() != 0) {
    _this->_internal_set_has_tags(from._internal_has_tags());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerInfo::CopyFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerInfo::IsInitialized() const {
  return true;
}

void ServerInfo::InternalSwap(ServerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trees_.InternalSwap(&other->_impl_.trees_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.has_tags_)
      + sizeof(ServerInfo::_impl_.has_tags_)
      - PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.index_time_)>(
          reinterpret_cast<char*>(&_impl_.index_time_),
          reinterpret_cast<char*>(&other->_impl_.index_time_));
}

::google::protobuf::Metadata ServerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[6]);
}
// ===================================================================

class CodeSearchResult::_Internal {
 public:
  using HasBits = decltype(std::declval<CodeSearchResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_._has_bits_);
  static const ::SearchStats& stats(const CodeSearchResult* msg);
  static void set_has_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::SearchStats& CodeSearchResult::_Internal::stats(const CodeSearchResult* msg) {
  return *msg->_impl_.stats_;
}
CodeSearchResult::CodeSearchResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CodeSearchResult)
}
CodeSearchResult::CodeSearchResult(const CodeSearchResult& from) : ::google::protobuf::Message() {
  CodeSearchResult* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.results_){from._impl_.results_},
      decltype(_impl_.file_results_){from._impl_.file_results_},
      decltype(_impl_.index_name_){},
      decltype(_impl_.stats_){nullptr},
      decltype(_impl_.index_time_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.index_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.index_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_index_name().empty()) {
    _this->_impl_.index_name_.Set(from._internal_index_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.stats_ = new ::SearchStats(*from._impl_.stats_);
  }
  _this->_impl_.index_time_ = from._impl_.index_time_;

  // @@protoc_insertion_point(copy_constructor:CodeSearchResult)
}
inline void CodeSearchResult::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.results_){arena},
      decltype(_impl_.file_results_){arena},
      decltype(_impl_.index_name_){},
      decltype(_impl_.stats_){nullptr},
      decltype(_impl_.index_time_){::int64_t{0}},
  };
  _impl_.index_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.index_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CodeSearchResult::~CodeSearchResult() {
  // @@protoc_insertion_point(destructor:CodeSearchResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CodeSearchResult::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.results_.~RepeatedPtrField();
  _impl_.file_results_.~RepeatedPtrField();
  _impl_.index_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.stats_;
}
void CodeSearchResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CodeSearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:CodeSearchResult)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_results()->Clear();
  _internal_mutable_file_results()->Clear();
  _impl_.index_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.stats_ != nullptr);
    _impl_.stats_->Clear();
  }
  _impl_.index_time_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CodeSearchResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 35, 2> CodeSearchResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CodeSearchResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .SearchStats stats = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.stats_)}},
    // repeated .SearchResult results = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.results_)}},
    // repeated .FileResult file_results = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.file_results_)}},
    // string index_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.index_name_)}},
    // int64 index_time = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CodeSearchResult, _impl_.index_time_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.index_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .SearchStats stats = 1;
    {PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.stats_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .SearchResult results = 2;
    {PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.results_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .FileResult file_results = 3;
    {PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.file_results_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string index_name = 4;
    {PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.index_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 index_time = 5;
    {PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.index_time_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SearchStats>()},
    {::_pbi::TcParser::GetTable<::SearchResult>()},
    {::_pbi::TcParser::GetTable<::FileResult>()},
  }}, {{
    "\20\0\0\0\12\0\0\0"
    "CodeSearchResult"
    "index_name"
  }},
};

::uint8_t* CodeSearchResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CodeSearchResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .SearchStats stats = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::stats(this),
        _Internal::stats(this).GetCachedSize(), target, stream);
  }

  // repeated .SearchResult results = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_results().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .FileResult file_results = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_file_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_file_results().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string index_name = 4;
  if (!this->_internal_index_name().empty()) {
    const std::string& _s = this->_internal_index_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CodeSearchResult.index_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 index_time = 5;
  if (this->_internal_index_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_index_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CodeSearchResult)
  return target;
}

::size_t CodeSearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CodeSearchResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SearchResult results = 2;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->_internal_results()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .FileResult file_results = 3;
  total_size += 1UL * this->_internal_file_results_size();
  for (const auto& msg : this->_internal_file_results()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string index_name = 4;
  if (!this->_internal_index_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_index_name());
  }

  // .SearchStats stats = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.stats_);
  }

  // int64 index_time = 5;
  if (this->_internal_index_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_index_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CodeSearchResult::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CodeSearchResult::MergeImpl
};
const ::google::protobuf::Message::ClassData*CodeSearchResult::GetClassData() const { return &_class_data_; }


void CodeSearchResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CodeSearchResult*>(&to_msg);
  auto& from = static_cast<const CodeSearchResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CodeSearchResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_results()->MergeFrom(from._internal_results());
  _this->_internal_mutable_file_results()->MergeFrom(from._internal_file_results());
  if (!from._internal_index_name().empty()) {
    _this->_internal_set_index_name(from._internal_index_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_stats()->::SearchStats::MergeFrom(
        from._internal_stats());
  }
  if (from._internal_index_time() != 0) {
    _this->_internal_set_index_time(from._internal_index_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CodeSearchResult::CopyFrom(const CodeSearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CodeSearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CodeSearchResult::IsInitialized() const {
  return true;
}

void CodeSearchResult::InternalSwap(CodeSearchResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  _impl_.file_results_.InternalSwap(&other->_impl_.file_results_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.index_name_, lhs_arena,
                                       &other->_impl_.index_name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.index_time_)
      + sizeof(CodeSearchResult::_impl_.index_time_)
      - PROTOBUF_FIELD_OFFSET(CodeSearchResult, _impl_.stats_)>(
          reinterpret_cast<char*>(&_impl_.stats_),
          reinterpret_cast<char*>(&other->_impl_.stats_));
}

::google::protobuf::Metadata CodeSearchResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[7]);
}
// ===================================================================

class InfoRequest::_Internal {
 public:
};

InfoRequest::InfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:InfoRequest)
}
InfoRequest::InfoRequest(const InfoRequest& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  InfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:InfoRequest)
}




const ::google::protobuf::Message::ClassData InfoRequest::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*InfoRequest::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata InfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[8]);
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:Empty)
}
Empty::Empty(const Empty& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Empty)
}




const ::google::protobuf::Message::ClassData Empty::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*Empty::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livegrep_2eproto_getter, &descriptor_table_livegrep_2eproto_once,
      file_level_metadata_livegrep_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
