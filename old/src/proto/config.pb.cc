// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#include "config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR IndexSpec::IndexSpec(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.paths_)*/ {},
      /*decltype(_impl_.repositories_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct IndexSpecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexSpecDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexSpecDefaultTypeInternal() {}
  union {
    IndexSpec _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexSpecDefaultTypeInternal _IndexSpec_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Metadata::Metadata(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.labels_)*/ {},
      /*decltype(_impl_.url_pattern_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.remote_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.github_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetadataDefaultTypeInternal() {}
  union {
    Metadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetadataDefaultTypeInternal _Metadata_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CloneOptions::CloneOptions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.username_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.password_env_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.depth_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CloneOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloneOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloneOptionsDefaultTypeInternal() {}
  union {
    CloneOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloneOptionsDefaultTypeInternal _CloneOptions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PathSpec::PathSpec(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ordered_contents_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.metadata_)*/ nullptr,
      /*decltype(_impl_.ignore_symlinks_)*/ false,
    } {}
struct PathSpecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathSpecDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathSpecDefaultTypeInternal() {}
  union {
    PathSpec _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathSpecDefaultTypeInternal _PathSpec_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RepoSpec::RepoSpec(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.revisions_)*/ {},
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.metadata_)*/ nullptr,
      /*decltype(_impl_.clone_options_)*/ nullptr,
      /*decltype(_impl_.walk_submodules_)*/ false,
    } {}
struct RepoSpecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoSpecDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoSpecDefaultTypeInternal() {}
  union {
    RepoSpec _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoSpecDefaultTypeInternal _RepoSpec_default_instance_;
static ::_pb::Metadata file_level_metadata_config_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_config_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_config_2eproto = nullptr;
const ::uint32_t TableStruct_config_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::IndexSpec, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::IndexSpec, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::IndexSpec, _impl_.paths_),
    PROTOBUF_FIELD_OFFSET(::IndexSpec, _impl_.repositories_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Metadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Metadata, _impl_.url_pattern_),
    PROTOBUF_FIELD_OFFSET(::Metadata, _impl_.remote_),
    PROTOBUF_FIELD_OFFSET(::Metadata, _impl_.github_),
    PROTOBUF_FIELD_OFFSET(::Metadata, _impl_.labels_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CloneOptions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CloneOptions, _impl_.depth_),
    PROTOBUF_FIELD_OFFSET(::CloneOptions, _impl_.username_),
    PROTOBUF_FIELD_OFFSET(::CloneOptions, _impl_.password_env_),
    PROTOBUF_FIELD_OFFSET(::PathSpec, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::PathSpec, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PathSpec, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::PathSpec, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::PathSpec, _impl_.ordered_contents_),
    PROTOBUF_FIELD_OFFSET(::PathSpec, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::PathSpec, _impl_.ignore_symlinks_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::RepoSpec, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::RepoSpec, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::RepoSpec, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::RepoSpec, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::RepoSpec, _impl_.revisions_),
    PROTOBUF_FIELD_OFFSET(::RepoSpec, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::RepoSpec, _impl_.walk_submodules_),
    PROTOBUF_FIELD_OFFSET(::RepoSpec, _impl_.clone_options_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::IndexSpec)},
        {11, -1, -1, sizeof(::Metadata)},
        {23, -1, -1, sizeof(::CloneOptions)},
        {34, 47, -1, sizeof(::PathSpec)},
        {52, 66, -1, sizeof(::RepoSpec)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_IndexSpec_default_instance_._instance,
    &::_Metadata_default_instance_._instance,
    &::_CloneOptions_default_instance_._instance,
    &::_PathSpec_default_instance_._instance,
    &::_RepoSpec_default_instance_._instance,
};
const char descriptor_table_protodef_config_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014config.proto\"l\n\tIndexSpec\022\014\n\004name\030\001 \001("
    "\t\022\"\n\005paths\030\002 \003(\0132\t.PathSpecR\010fs_paths\022-\n"
    "\014repositories\030\003 \003(\0132\t.RepoSpecR\014reposito"
    "ries\"t\n\010Metadata\022 \n\013url_pattern\030\001 \001(\tR\013u"
    "rl_pattern\022\026\n\006remote\030\002 \001(\tR\006remote\022\026\n\006gi"
    "thub\030\003 \001(\tR\006github\022\026\n\006labels\030\004 \003(\tR\006labe"
    "ls\"d\n\014CloneOptions\022\024\n\005depth\030\001 \001(\005R\005depth"
    "\022\032\n\010username\030\002 \001(\tR\010username\022\"\n\014password"
    "_env\030\003 \001(\tR\014password_env\"\257\001\n\010PathSpec\022\022\n"
    "\004path\030\001 \001(\tR\004path\022\022\n\004name\030\002 \001(\tR\004name\022*\n"
    "\020ordered_contents\030\003 \001(\tR\020ordered_content"
    "s\022%\n\010metadata\030\004 \001(\0132\t.MetadataR\010metadata"
    "\022(\n\017ignore_symlinks\030\005 \001(\010R\017ignore_symlin"
    "ks\"\326\001\n\010RepoSpec\022\022\n\004path\030\001 \001(\tR\004path\022\022\n\004n"
    "ame\030\002 \001(\tR\004name\022\034\n\trevisions\030\003 \003(\tR\trevi"
    "sions\022%\n\010metadata\030\004 \001(\0132\t.MetadataR\010meta"
    "data\022(\n\017walk_submodules\030\005 \001(\010R\017walk_subm"
    "odules\0223\n\rclone_options\030\006 \001(\0132\r.CloneOpt"
    "ionsR\rclone_optionsB\010Z\006proto/b\006proto3"
};
static ::absl::once_flag descriptor_table_config_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_config_2eproto = {
    false,
    false,
    757,
    descriptor_table_protodef_config_2eproto,
    "config.proto",
    &descriptor_table_config_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_config_2eproto::offsets,
    file_level_metadata_config_2eproto,
    file_level_enum_descriptors_config_2eproto,
    file_level_service_descriptors_config_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_config_2eproto_getter() {
  return &descriptor_table_config_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_config_2eproto(&descriptor_table_config_2eproto);
// ===================================================================

class IndexSpec::_Internal {
 public:
};

IndexSpec::IndexSpec(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IndexSpec)
}
IndexSpec::IndexSpec(const IndexSpec& from) : ::google::protobuf::Message() {
  IndexSpec* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.paths_){from._impl_.paths_},
      decltype(_impl_.repositories_){from._impl_.repositories_},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:IndexSpec)
}
inline void IndexSpec::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.paths_){arena},
      decltype(_impl_.repositories_){arena},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
IndexSpec::~IndexSpec() {
  // @@protoc_insertion_point(destructor:IndexSpec)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IndexSpec::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.paths_.~RepeatedPtrField();
  _impl_.repositories_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}
void IndexSpec::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void IndexSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexSpec)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_paths()->Clear();
  _internal_mutable_repositories()->Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IndexSpec::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 22, 2> IndexSpec::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IndexSpec_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IndexSpec, _impl_.name_)}},
    // repeated .PathSpec paths = 2 [json_name = "fs_paths"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IndexSpec, _impl_.paths_)}},
    // repeated .RepoSpec repositories = 3 [json_name = "repositories"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(IndexSpec, _impl_.repositories_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(IndexSpec, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .PathSpec paths = 2 [json_name = "fs_paths"];
    {PROTOBUF_FIELD_OFFSET(IndexSpec, _impl_.paths_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .RepoSpec repositories = 3 [json_name = "repositories"];
    {PROTOBUF_FIELD_OFFSET(IndexSpec, _impl_.repositories_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PathSpec>()},
    {::_pbi::TcParser::GetTable<::RepoSpec>()},
  }}, {{
    "\11\4\0\0\0\0\0\0"
    "IndexSpec"
    "name"
  }},
};

::uint8_t* IndexSpec::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IndexSpec)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "IndexSpec.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .PathSpec paths = 2 [json_name = "fs_paths"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_paths_size()); i < n; i++) {
    const auto& repfield = this->_internal_paths().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .RepoSpec repositories = 3 [json_name = "repositories"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repositories_size()); i < n; i++) {
    const auto& repfield = this->_internal_repositories().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IndexSpec)
  return target;
}

::size_t IndexSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexSpec)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PathSpec paths = 2 [json_name = "fs_paths"];
  total_size += 1UL * this->_internal_paths_size();
  for (const auto& msg : this->_internal_paths()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .RepoSpec repositories = 3 [json_name = "repositories"];
  total_size += 1UL * this->_internal_repositories_size();
  for (const auto& msg : this->_internal_repositories()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IndexSpec::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    IndexSpec::MergeImpl
};
const ::google::protobuf::Message::ClassData*IndexSpec::GetClassData() const { return &_class_data_; }


void IndexSpec::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IndexSpec*>(&to_msg);
  auto& from = static_cast<const IndexSpec&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IndexSpec)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_paths()->MergeFrom(from._internal_paths());
  _this->_internal_mutable_repositories()->MergeFrom(from._internal_repositories());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IndexSpec::CopyFrom(const IndexSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IndexSpec::IsInitialized() const {
  return true;
}

void IndexSpec::InternalSwap(IndexSpec* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.paths_.InternalSwap(&other->_impl_.paths_);
  _impl_.repositories_.InternalSwap(&other->_impl_.repositories_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::google::protobuf::Metadata IndexSpec::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[0]);
}
// ===================================================================

class Metadata::_Internal {
 public:
};

Metadata::Metadata(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Metadata)
}
Metadata::Metadata(const Metadata& from) : ::google::protobuf::Message() {
  Metadata* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.labels_){from._impl_.labels_},
      decltype(_impl_.url_pattern_){},
      decltype(_impl_.remote_){},
      decltype(_impl_.github_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.url_pattern_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_pattern_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url_pattern().empty()) {
    _this->_impl_.url_pattern_.Set(from._internal_url_pattern(), _this->GetArenaForAllocation());
  }
  _impl_.remote_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remote().empty()) {
    _this->_impl_.remote_.Set(from._internal_remote(), _this->GetArenaForAllocation());
  }
  _impl_.github_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.github_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_github().empty()) {
    _this->_impl_.github_.Set(from._internal_github(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:Metadata)
}
inline void Metadata::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.labels_){arena},
      decltype(_impl_.url_pattern_){},
      decltype(_impl_.remote_){},
      decltype(_impl_.github_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.url_pattern_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.url_pattern_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remote_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.remote_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.github_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.github_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:Metadata)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Metadata::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_labels()->~RepeatedPtrField();
  _impl_.url_pattern_.Destroy();
  _impl_.remote_.Destroy();
  _impl_.github_.Destroy();
}
void Metadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Metadata)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_labels()->Clear();
  _impl_.url_pattern_.ClearToEmpty();
  _impl_.remote_.ClearToEmpty();
  _impl_.github_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Metadata::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 46, 2> Metadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Metadata_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string labels = 4 [json_name = "labels"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.labels_)}},
    // string url_pattern = 1 [json_name = "url_pattern"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.url_pattern_)}},
    // string remote = 2 [json_name = "remote"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.remote_)}},
    // string github = 3 [json_name = "github"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.github_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string url_pattern = 1 [json_name = "url_pattern"];
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.url_pattern_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remote = 2 [json_name = "remote"];
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.remote_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string github = 3 [json_name = "github"];
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.github_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string labels = 4 [json_name = "labels"];
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.labels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\10\13\6\6\6\0\0\0"
    "Metadata"
    "url_pattern"
    "remote"
    "github"
    "labels"
  }},
};

::uint8_t* Metadata::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Metadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string url_pattern = 1 [json_name = "url_pattern"];
  if (!this->_internal_url_pattern().empty()) {
    const std::string& _s = this->_internal_url_pattern();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Metadata.url_pattern");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string remote = 2 [json_name = "remote"];
  if (!this->_internal_remote().empty()) {
    const std::string& _s = this->_internal_remote();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Metadata.remote");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string github = 3 [json_name = "github"];
  if (!this->_internal_github().empty()) {
    const std::string& _s = this->_internal_github();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Metadata.github");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated string labels = 4 [json_name = "labels"];
  for (int i = 0, n = this->_internal_labels_size(); i < n; ++i) {
    const auto& s = this->_internal_labels().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Metadata.labels");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Metadata)
  return target;
}

::size_t Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Metadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string labels = 4 [json_name = "labels"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_labels().size());
  for (int i = 0, n = _internal_labels().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_labels().Get(i));
  }
  // string url_pattern = 1 [json_name = "url_pattern"];
  if (!this->_internal_url_pattern().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_url_pattern());
  }

  // string remote = 2 [json_name = "remote"];
  if (!this->_internal_remote().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote());
  }

  // string github = 3 [json_name = "github"];
  if (!this->_internal_github().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_github());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Metadata::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Metadata::MergeImpl
};
const ::google::protobuf::Message::ClassData*Metadata::GetClassData() const { return &_class_data_; }


void Metadata::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Metadata*>(&to_msg);
  auto& from = static_cast<const Metadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Metadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_labels()->MergeFrom(from._internal_labels());
  if (!from._internal_url_pattern().empty()) {
    _this->_internal_set_url_pattern(from._internal_url_pattern());
  }
  if (!from._internal_remote().empty()) {
    _this->_internal_set_remote(from._internal_remote());
  }
  if (!from._internal_github().empty()) {
    _this->_internal_set_github(from._internal_github());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Metadata::IsInitialized() const {
  return true;
}

void Metadata::InternalSwap(Metadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_pattern_, lhs_arena,
                                       &other->_impl_.url_pattern_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_, lhs_arena,
                                       &other->_impl_.remote_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.github_, lhs_arena,
                                       &other->_impl_.github_, rhs_arena);
}

::google::protobuf::Metadata Metadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[1]);
}
// ===================================================================

class CloneOptions::_Internal {
 public:
};

CloneOptions::CloneOptions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CloneOptions)
}
CloneOptions::CloneOptions(const CloneOptions& from) : ::google::protobuf::Message() {
  CloneOptions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){},
      decltype(_impl_.password_env_){},
      decltype(_impl_.depth_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.username_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), _this->GetArenaForAllocation());
  }
  _impl_.password_env_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_env_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password_env().empty()) {
    _this->_impl_.password_env_.Set(from._internal_password_env(), _this->GetArenaForAllocation());
  }
  _this->_impl_.depth_ = from._impl_.depth_;

  // @@protoc_insertion_point(copy_constructor:CloneOptions)
}
inline void CloneOptions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){},
      decltype(_impl_.password_env_){},
      decltype(_impl_.depth_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.username_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_env_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.password_env_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CloneOptions::~CloneOptions() {
  // @@protoc_insertion_point(destructor:CloneOptions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CloneOptions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_env_.Destroy();
}
void CloneOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CloneOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:CloneOptions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_env_.ClearToEmpty();
  _impl_.depth_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CloneOptions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 41, 2> CloneOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CloneOptions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 depth = 1 [json_name = "depth"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CloneOptions, _impl_.depth_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CloneOptions, _impl_.depth_)}},
    // string username = 2 [json_name = "username"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CloneOptions, _impl_.username_)}},
    // string password_env = 3 [json_name = "password_env"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CloneOptions, _impl_.password_env_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 depth = 1 [json_name = "depth"];
    {PROTOBUF_FIELD_OFFSET(CloneOptions, _impl_.depth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string username = 2 [json_name = "username"];
    {PROTOBUF_FIELD_OFFSET(CloneOptions, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password_env = 3 [json_name = "password_env"];
    {PROTOBUF_FIELD_OFFSET(CloneOptions, _impl_.password_env_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\0\10\14\0\0\0\0"
    "CloneOptions"
    "username"
    "password_env"
  }},
};

::uint8_t* CloneOptions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CloneOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 depth = 1 [json_name = "depth"];
  if (this->_internal_depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_depth(), target);
  }

  // string username = 2 [json_name = "username"];
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CloneOptions.username");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string password_env = 3 [json_name = "password_env"];
  if (!this->_internal_password_env().empty()) {
    const std::string& _s = this->_internal_password_env();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CloneOptions.password_env");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CloneOptions)
  return target;
}

::size_t CloneOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CloneOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 2 [json_name = "username"];
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string password_env = 3 [json_name = "password_env"];
  if (!this->_internal_password_env().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password_env());
  }

  // int32 depth = 1 [json_name = "depth"];
  if (this->_internal_depth() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_depth());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CloneOptions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CloneOptions::MergeImpl
};
const ::google::protobuf::Message::ClassData*CloneOptions::GetClassData() const { return &_class_data_; }


void CloneOptions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CloneOptions*>(&to_msg);
  auto& from = static_cast<const CloneOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CloneOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password_env().empty()) {
    _this->_internal_set_password_env(from._internal_password_env());
  }
  if (from._internal_depth() != 0) {
    _this->_internal_set_depth(from._internal_depth());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CloneOptions::CopyFrom(const CloneOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CloneOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CloneOptions::IsInitialized() const {
  return true;
}

void CloneOptions::InternalSwap(CloneOptions* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, lhs_arena,
                                       &other->_impl_.username_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_env_, lhs_arena,
                                       &other->_impl_.password_env_, rhs_arena);
        swap(_impl_.depth_, other->_impl_.depth_);
}

::google::protobuf::Metadata CloneOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[2]);
}
// ===================================================================

class PathSpec::_Internal {
 public:
  using HasBits = decltype(std::declval<PathSpec>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PathSpec, _impl_._has_bits_);
  static const ::Metadata& metadata(const PathSpec* msg);
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Metadata& PathSpec::_Internal::metadata(const PathSpec* msg) {
  return *msg->_impl_.metadata_;
}
PathSpec::PathSpec(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PathSpec)
}
PathSpec::PathSpec(const PathSpec& from) : ::google::protobuf::Message() {
  PathSpec* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.name_){},
      decltype(_impl_.ordered_contents_){},
      decltype(_impl_.metadata_){nullptr},
      decltype(_impl_.ignore_symlinks_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.ordered_contents_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ordered_contents_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ordered_contents().empty()) {
    _this->_impl_.ordered_contents_.Set(from._internal_ordered_contents(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.metadata_ = new ::Metadata(*from._impl_.metadata_);
  }
  _this->_impl_.ignore_symlinks_ = from._impl_.ignore_symlinks_;

  // @@protoc_insertion_point(copy_constructor:PathSpec)
}
inline void PathSpec::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.path_){},
      decltype(_impl_.name_){},
      decltype(_impl_.ordered_contents_){},
      decltype(_impl_.metadata_){nullptr},
      decltype(_impl_.ignore_symlinks_){false},
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ordered_contents_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ordered_contents_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PathSpec::~PathSpec() {
  // @@protoc_insertion_point(destructor:PathSpec)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PathSpec::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
  _impl_.name_.Destroy();
  _impl_.ordered_contents_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metadata_;
}
void PathSpec::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PathSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:PathSpec)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.ordered_contents_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.metadata_ != nullptr);
    _impl_.metadata_->Clear();
  }
  _impl_.ignore_symlinks_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PathSpec::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 41, 2> PathSpec::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PathSpec, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PathSpec_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.path_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.name_)}},
    // string ordered_contents = 3 [json_name = "ordered_contents"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.ordered_contents_)}},
    // .Metadata metadata = 4 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.metadata_)}},
    // bool ignore_symlinks = 5 [json_name = "ignore_symlinks"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PathSpec, _impl_.ignore_symlinks_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.ignore_symlinks_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ordered_contents = 3 [json_name = "ordered_contents"];
    {PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.ordered_contents_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Metadata metadata = 4 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool ignore_symlinks = 5 [json_name = "ignore_symlinks"];
    {PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.ignore_symlinks_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Metadata>()},
  }}, {{
    "\10\4\4\20\0\0\0\0"
    "PathSpec"
    "path"
    "name"
    "ordered_contents"
  }},
};

::uint8_t* PathSpec::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PathSpec)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string path = 1 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PathSpec.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PathSpec.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string ordered_contents = 3 [json_name = "ordered_contents"];
  if (!this->_internal_ordered_contents().empty()) {
    const std::string& _s = this->_internal_ordered_contents();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PathSpec.ordered_contents");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Metadata metadata = 4 [json_name = "metadata"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  // bool ignore_symlinks = 5 [json_name = "ignore_symlinks"];
  if (this->_internal_ignore_symlinks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_ignore_symlinks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PathSpec)
  return target;
}

::size_t PathSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PathSpec)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string ordered_contents = 3 [json_name = "ordered_contents"];
  if (!this->_internal_ordered_contents().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ordered_contents());
  }

  // .Metadata metadata = 4 [json_name = "metadata"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_);
  }

  // bool ignore_symlinks = 5 [json_name = "ignore_symlinks"];
  if (this->_internal_ignore_symlinks() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PathSpec::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PathSpec::MergeImpl
};
const ::google::protobuf::Message::ClassData*PathSpec::GetClassData() const { return &_class_data_; }


void PathSpec::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PathSpec*>(&to_msg);
  auto& from = static_cast<const PathSpec&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PathSpec)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_ordered_contents().empty()) {
    _this->_internal_set_ordered_contents(from._internal_ordered_contents());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_metadata()->::Metadata::MergeFrom(
        from._internal_metadata());
  }
  if (from._internal_ignore_symlinks() != 0) {
    _this->_internal_set_ignore_symlinks(from._internal_ignore_symlinks());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathSpec::CopyFrom(const PathSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PathSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PathSpec::IsInitialized() const {
  return true;
}

void PathSpec::InternalSwap(PathSpec* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ordered_contents_, lhs_arena,
                                       &other->_impl_.ordered_contents_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.ignore_symlinks_)
      + sizeof(PathSpec::_impl_.ignore_symlinks_)
      - PROTOBUF_FIELD_OFFSET(PathSpec, _impl_.metadata_)>(
          reinterpret_cast<char*>(&_impl_.metadata_),
          reinterpret_cast<char*>(&other->_impl_.metadata_));
}

::google::protobuf::Metadata PathSpec::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[3]);
}
// ===================================================================

class RepoSpec::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoSpec>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_._has_bits_);
  static const ::Metadata& metadata(const RepoSpec* msg);
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::CloneOptions& clone_options(const RepoSpec* msg);
  static void set_has_clone_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::Metadata& RepoSpec::_Internal::metadata(const RepoSpec* msg) {
  return *msg->_impl_.metadata_;
}
const ::CloneOptions& RepoSpec::_Internal::clone_options(const RepoSpec* msg) {
  return *msg->_impl_.clone_options_;
}
RepoSpec::RepoSpec(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RepoSpec)
}
RepoSpec::RepoSpec(const RepoSpec& from) : ::google::protobuf::Message() {
  RepoSpec* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.revisions_){from._impl_.revisions_},
      decltype(_impl_.path_){},
      decltype(_impl_.name_){},
      decltype(_impl_.metadata_){nullptr},
      decltype(_impl_.clone_options_){nullptr},
      decltype(_impl_.walk_submodules_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.metadata_ = new ::Metadata(*from._impl_.metadata_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.clone_options_ = new ::CloneOptions(*from._impl_.clone_options_);
  }
  _this->_impl_.walk_submodules_ = from._impl_.walk_submodules_;

  // @@protoc_insertion_point(copy_constructor:RepoSpec)
}
inline void RepoSpec::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.revisions_){arena},
      decltype(_impl_.path_){},
      decltype(_impl_.name_){},
      decltype(_impl_.metadata_){nullptr},
      decltype(_impl_.clone_options_){nullptr},
      decltype(_impl_.walk_submodules_){false},
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
RepoSpec::~RepoSpec() {
  // @@protoc_insertion_point(destructor:RepoSpec)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoSpec::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_revisions()->~RepeatedPtrField();
  _impl_.path_.Destroy();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metadata_;
  if (this != internal_default_instance()) delete _impl_.clone_options_;
}
void RepoSpec::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RepoSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:RepoSpec)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_revisions()->Clear();
  _impl_.path_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.clone_options_ != nullptr);
      _impl_.clone_options_->Clear();
    }
  }
  _impl_.walk_submodules_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoSpec::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 34, 2> RepoSpec::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RepoSpec_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.path_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.name_)}},
    // repeated string revisions = 3 [json_name = "revisions"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.revisions_)}},
    // .Metadata metadata = 4 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.metadata_)}},
    // bool walk_submodules = 5 [json_name = "walk_submodules"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RepoSpec, _impl_.walk_submodules_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.walk_submodules_)}},
    // .CloneOptions clone_options = 6 [json_name = "clone_options"];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.clone_options_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string revisions = 3 [json_name = "revisions"];
    {PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.revisions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .Metadata metadata = 4 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool walk_submodules = 5 [json_name = "walk_submodules"];
    {PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.walk_submodules_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .CloneOptions clone_options = 6 [json_name = "clone_options"];
    {PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.clone_options_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Metadata>()},
    {::_pbi::TcParser::GetTable<::CloneOptions>()},
  }}, {{
    "\10\4\4\11\0\0\0\0"
    "RepoSpec"
    "path"
    "name"
    "revisions"
  }},
};

::uint8_t* RepoSpec::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RepoSpec)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string path = 1 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RepoSpec.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RepoSpec.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string revisions = 3 [json_name = "revisions"];
  for (int i = 0, n = this->_internal_revisions_size(); i < n; ++i) {
    const auto& s = this->_internal_revisions().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RepoSpec.revisions");
    target = stream->WriteString(3, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Metadata metadata = 4 [json_name = "metadata"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  // bool walk_submodules = 5 [json_name = "walk_submodules"];
  if (this->_internal_walk_submodules() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_walk_submodules(), target);
  }

  // .CloneOptions clone_options = 6 [json_name = "clone_options"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::clone_options(this),
        _Internal::clone_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RepoSpec)
  return target;
}

::size_t RepoSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RepoSpec)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string revisions = 3 [json_name = "revisions"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_revisions().size());
  for (int i = 0, n = _internal_revisions().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_revisions().Get(i));
  }
  // string path = 1 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .Metadata metadata = 4 [json_name = "metadata"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.metadata_);
    }

    // .CloneOptions clone_options = 6 [json_name = "clone_options"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.clone_options_);
    }

  }
  // bool walk_submodules = 5 [json_name = "walk_submodules"];
  if (this->_internal_walk_submodules() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoSpec::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RepoSpec::MergeImpl
};
const ::google::protobuf::Message::ClassData*RepoSpec::GetClassData() const { return &_class_data_; }


void RepoSpec::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoSpec*>(&to_msg);
  auto& from = static_cast<const RepoSpec&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RepoSpec)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_revisions()->MergeFrom(from._internal_revisions());
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_metadata()->::Metadata::MergeFrom(
          from._internal_metadata());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_clone_options()->::CloneOptions::MergeFrom(
          from._internal_clone_options());
    }
  }
  if (from._internal_walk_submodules() != 0) {
    _this->_internal_set_walk_submodules(from._internal_walk_submodules());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoSpec::CopyFrom(const RepoSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RepoSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoSpec::IsInitialized() const {
  return true;
}

void RepoSpec::InternalSwap(RepoSpec* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.revisions_.InternalSwap(&other->_impl_.revisions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.walk_submodules_)
      + sizeof(RepoSpec::_impl_.walk_submodules_)
      - PROTOBUF_FIELD_OFFSET(RepoSpec, _impl_.metadata_)>(
          reinterpret_cast<char*>(&_impl_.metadata_),
          reinterpret_cast<char*>(&other->_impl_.metadata_));
}

::google::protobuf::Metadata RepoSpec::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_config_2eproto_getter, &descriptor_table_config_2eproto_once,
      file_level_metadata_config_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
